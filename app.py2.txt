import streamlit as st
from PIL import Image
import pytesseract
import pandas as pd

# Title and Description
st.title("Automated Reconciliation System")
st.write("Upload images of slips and bank statements to reconcile transactions.")

# File Uploads
slip_image = st.file_uploader("Upload Slip Image", type=["jpg", "png", "jpeg"])
bank_image = st.file_uploader("Upload Bank Statement Image", type=["jpg", "png", "jpeg"])

if slip_image and bank_image:
    # Load and process images
    slip_img = Image.open(slip_image)
    bank_img = Image.open(bank_image)

    slip_text = pytesseract.image_to_string(slip_img)
    bank_text = pytesseract.image_to_string(bank_img)

    st.subheader("Extracted Text from Slip")
    st.text(slip_text)

    st.subheader("Extracted Text from Bank Statement")
    st.text(bank_text)

    # Reconciliation Logic
    slips = [line.strip() for line in slip_text.splitlines() if line.strip()]
    bank_statements = [line.strip() for line in bank_text.splitlines() if line.strip()]

    recon_results = []
    for slip in slips:
        if slip in bank_statements:
            recon_results.append({"Slip Entry": slip, "Status": "Match Found"})
        else:
            recon_results.append({"Slip Entry": slip, "Status": "No Match"})

    # Display Results
    df = pd.DataFrame(recon_results)
    st.subheader("Reconciliation Results")
    st.dataframe(df)

    # Downloadable CSV
    @st.cache
    def convert_df_to_csv(dataframe):
        return dataframe.to_csv(index=False).encode('utf-8')

    csv = convert_df_to_csv(df)
    st.download_button(
        label="Download Reconciliation Report",
        data=csv,
        file_name="reconciliation_report.csv",
        mime="text/csv",
    )
